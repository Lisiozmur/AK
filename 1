_code segment
assume  cs:_code, ds:_data, ss:_stack      
start:	mov	ax,_data
	mov	ds,ax
	mov	ax,_stack
	mov	ss,ax
	mov	sp,offset top		
		
	mov     bp,3
	mov     bx,2
    call spac
    mov cx,bp
spacja1:
    mov ah, 02h
    int 21h
    loop spacja1
    
    call znak
    
    mov cx, bx
gwiazdka1:
    mov ah, 02h
    int 21h
    loop gwiazdka1
        
    mov     ah, 02h     
    mov     dl, 0Ah      
    int     21h
    mov     dl, 0Dh     
    int     21h 
    
    mov     bp,2
	mov     bx,3
	mov     si,2    
cale: 
    call spac
    mov     cx, bp      
spacja:
       
    mov     ah, 02h  
    int     21h
    loop    spacja
 
    call znak
    
    mov     cx, bx     
gwiazdka:
    
    mov     ah, 02h
    int     21h         
    loop    gwiazdka
   
   
    call zed 
    mov bx, si
srodek:
    mov ah, 02h
    int 21h
    loop srodek
    
    call znak
    mov bp,1
    
    mov ah, 02h
    int 21h
    
    mov     ah, 02h     
    mov     dl, 0Ah      
    int     21h
    mov     dl, 0Dh     
    int     21h

    add     bx, 2       
    dec     bp          
    jnz     cale        	
	
	
	
	mov	ah,4ch     
	mov	al,0      
	int	21h
	
 znak:
mov dl, "*"	
RET	 

spac:
mov dl, " "
RET

zed:
mov dl, "S"
RET
	
_code ends

_data segment
_data ends

_stack segment stack
	dw	100h dup(0)        
top	Label word
_stack ends

end start    
